from transformers import AutoModelForCausalLM, AutoTokenizer
import torch

# Load model and tokenizer
model_name = "bigcode/starcoder"
tokenizer = AutoTokenizer.from_pretrained(model_name)
model = AutoModelForCausalLM.from_pretrained(model_name, torch_dtype=torch.float16)

def send_to_llm(prompt, max_tokens=100):
    """
    Sends a prompt to the StarCoder LLM and returns the response.
    
    Args:
        prompt (str): The input text prompt for the LLM.
        max_tokens (int): Maximum number of tokens for the response.

    Returns:
        str: The response generated by the LLM.
    """
    inputs = tokenizer(prompt, return_tensors="pt")
    outputs = model.generate(inputs["input_ids"], max_length=max_tokens)
    return tokenizer.decode(outputs[0], skip_special_tokens=True)

# Example usage
if __name__ == "__main__":
    prompt = "Write a Python function to calculate factorial:"
    response = send_to_llm(prompt)
    print(f"Response from LLM:\n{response}")
